{"version":3,"sources":["Components/Search.js","Components/Card.js","Components/WallpaperGrid.js","Components/Modal.js","utils/config.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","handleChange","e","setState","searchTxt","target","value","handleSubmit","searchHandler","state","preventDefault","className","onSubmit","this","type","placeholder","onChange","Component","Card","clickHandler","data","onClick","src","urls","small","alt","alt_description","WallpaperGrid","length","map","index","Modal","mydata","regular","id","href","links","download","unsplash","createApi","accessKey","App","updateModal","newData","showModal","modalData","txt","wallpaperData","getData","photos","getRandom","count","query","then","result","errors","alert","response","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1e720eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import { unsplash } from \"../utils/api\";\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTxt: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      searchTxt: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.props.searchHandler(this.state.searchTxt);\r\n    e.preventDefault();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">Image Hunt</h1>\r\n        <form className=\"searchForm\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            className=\"searchInput\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={this.state.searchTxt}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input className=\"btn\" type=\"submit\" value=\"Search\" />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  clickHandler = () => {\r\n    this.props.clickHandler(this.props.data);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          onClick={this.clickHandler}\r\n          className=\"thumbImg\"\r\n          src={this.props.data.urls.small}\r\n          alt={this.props.data.alt_description}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst WallpaperGrid = (props) => {\r\n  const { data, clickHandler } = props;\r\n  return (\r\n    <div className=\"grid\">\r\n      {data.length === 0 ? \"loading...\" : \"\"}\r\n      {data?.map((data, index) => (\r\n        <Card key={index} data={data} clickHandler={clickHandler} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WallpaperGrid;\r\n","import React from \"react\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div onClick={props.clickHandler} className=\"modalContainer\">\r\n      <div className=\"modal\">\r\n        <img\r\n          className=\"modalImg\"\r\n          src={props.mydata.urls.regular}\r\n          alt={props.mydata.alt_description}\r\n        />\r\n        <a\r\n          className=\"btn\"\r\n          id=\"download\"\r\n          href={props.mydata.links.download}\r\n          target=\"blank\"\r\n          download\r\n        >\r\n          Download\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { createApi } from \"unsplash-js\";\r\nexport const unsplash = createApi({\r\n  accessKey: \"ae92T5cZWHfnCND575YhwptFfiY4WJ0z2gcUNLKKt18\",\r\n});\r\n// export const unsplash = new Unsplash({\r\n//   applicationId: \"{ae92T5cZWHfnCND575YhwptFfiY4WJ0z2gcUNLKKt18}\",\r\n//   secret: \"{SLyE09se2txBtId9UZv1d4OcuHZmAUPoMwZCvPd1SkU}\",\r\n// });\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Search from \"./Components/Search\";\nimport WallpaperGrid from \"./Components/WallpaperGrid\";\nimport Modal from \"./Components/Modal\";\nimport { unsplash } from \"./utils/config\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      searchTxt: \"\",\n      wallpaperData: [],\n      modalData: {},\n    };\n  }\n\n  updateModal = (newData) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      modalData: newData,\n    });\n  };\n\n  searchHandler = (txt) => {\n    this.setState(\n      {\n        searchTxt: txt,\n        wallpaperData: [],\n      },\n      () => {\n        this.getData();\n      }\n    );\n  };\n\n  getData = () => {\n    unsplash.photos\n      .getRandom({ count: 15, query: this.state.searchTxt })\n      .then((result) => {\n        if (result.errors) {\n          alert(\"error occurred: \", result.errors[0]);\n        } else {\n          const data = result.response;\n          this.setState({\n            wallpaperData: this.state.wallpaperData.concat(data),\n          });\n        }\n      });\n  };\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <Search searchHandler={this.searchHandler} />\n          {this.state.showModal ? (\n            <Modal\n              mydata={this.state.modalData}\n              clickHandler={this.updateModal}\n            />\n          ) : (\n            \"\"\n          )}\n          <WallpaperGrid\n            data={this.state.wallpaperData}\n            clickHandler={this.updateModal}\n          />\n        </div>\n        <button className=\"btn\" onClick={this.getData}>\n          Load More\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}